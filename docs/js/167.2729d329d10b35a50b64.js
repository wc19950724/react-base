"use strict";(self.webpackChunkreact_base=self.webpackChunkreact_base||[]).push([[167],{9640:(e,r,t)=>{t.d(r,{x:()=>o});var n=t(7327);class o extends n.yxD{constructor(e){super(e),this.type=n.cLu}parse(e){const r=function(e,r){switch(e){case 1:throw new Error("THREE.RGBELoader: Read Error: "+(r||""));case 2:throw new Error("THREE.RGBELoader: Write Error: "+(r||""));case 3:throw new Error("THREE.RGBELoader: Bad File Format: "+(r||""));default:throw new Error("THREE.RGBELoader: Memory Error: "+(r||""))}},t=function(e,r,t){r=r||1024;let n=e.pos,o=-1,a=0,s="",i=String.fromCharCode.apply(null,new Uint16Array(e.subarray(n,n+128)));for(;0>(o=i.indexOf("\n"))&&a<r&&n<e.byteLength;)s+=i,a+=i.length,n+=128,i+=String.fromCharCode.apply(null,new Uint16Array(e.subarray(n,n+128)));return-1<o&&(!1!==t&&(e.pos+=a+o+1),s+i.slice(0,o))},o=function(e,r,t,n){const o=e[r+3],a=Math.pow(2,o-128)/255;t[n+0]=e[r+0]*a,t[n+1]=e[r+1]*a,t[n+2]=e[r+2]*a,t[n+3]=1},a=function(e,r,t,o){const a=e[r+3],s=Math.pow(2,a-128)/255;t[o+0]=n.A5E.toHalfFloat(Math.min(e[r+0]*s,65504)),t[o+1]=n.A5E.toHalfFloat(Math.min(e[r+1]*s,65504)),t[o+2]=n.A5E.toHalfFloat(Math.min(e[r+2]*s,65504)),t[o+3]=n.A5E.toHalfFloat(1)},s=new Uint8Array(e);s.pos=0;const i=function(e){const n=/^\s*GAMMA\s*=\s*(\d+(\.\d+)?)\s*$/,o=/^\s*EXPOSURE\s*=\s*(\d+(\.\d+)?)\s*$/,a=/^\s*FORMAT=(\S+)\s*$/,s=/^\s*\-Y\s+(\d+)\s+\+X\s+(\d+)\s*$/,i={valid:0,string:"",comments:"",programtype:"RGBE",format:"",gamma:1,exposure:1,width:0,height:0};let c,f;for((e.pos>=e.byteLength||!(c=t(e)))&&r(1,"no header found"),(f=c.match(/^#\?(\S+)/))||r(3,"bad initial token"),i.valid|=1,i.programtype=f[1],i.string+=c+"\n";c=t(e),!1!==c;)if(i.string+=c+"\n","#"!==c.charAt(0)){if((f=c.match(n))&&(i.gamma=parseFloat(f[1])),(f=c.match(o))&&(i.exposure=parseFloat(f[1])),(f=c.match(a))&&(i.valid|=2,i.format=f[1]),(f=c.match(s))&&(i.valid|=4,i.height=parseInt(f[1],10),i.width=parseInt(f[2],10)),2&i.valid&&4&i.valid)break}else i.comments+=c+"\n";return 2&i.valid||r(3,"missing format specifier"),4&i.valid||r(3,"missing image size specifier"),i}(s),c=i.width,f=i.height,l=function(e,t,n){const o=t;if(o<8||o>32767||2!==e[0]||2!==e[1]||128&e[2])return new Uint8Array(e);o!==(e[2]<<8|e[3])&&r(3,"wrong scanline width");const a=new Uint8Array(4*t*n);a.length||r(4,"unable to allocate buffer space");let s=0,i=0;const c=4*o,f=new Uint8Array(4),l=new Uint8Array(c);let u=n;for(;u>0&&i<e.byteLength;){i+4>e.byteLength&&r(1),f[0]=e[i++],f[1]=e[i++],f[2]=e[i++],f[3]=e[i++],2==f[0]&&2==f[1]&&(f[2]<<8|f[3])==o||r(3,"bad rgbe scanline format");let t,n=0;for(;n<c&&i<e.byteLength;){t=e[i++];const o=t>128;if(o&&(t-=128),(0===t||n+t>c)&&r(3,"bad scanline data"),o){const r=e[i++];for(let e=0;e<t;e++)l[n++]=r}else l.set(e.subarray(i,i+t),n),n+=t,i+=t}const p=o;for(let e=0;e<p;e++){let r=0;a[s]=l[e+r],r+=o,a[s+1]=l[e+r],r+=o,a[s+2]=l[e+r],r+=o,a[s+3]=l[e+r],s+=4}u--}return a}(s.subarray(s.pos),c,f);let u,p,d;switch(this.type){case n.VzW:d=l.length/4;const e=new Float32Array(4*d);for(let r=0;r<d;r++)o(l,4*r,e,4*r);u=e,p=n.VzW;break;case n.cLu:d=l.length/4;const r=new Uint16Array(4*d);for(let e=0;e<d;e++)a(l,4*e,r,4*e);u=r,p=n.cLu;break;default:throw new Error("THREE.RGBELoader: Unsupported type: "+this.type)}return{width:c,height:f,data:u,header:i.string,gamma:i.gamma,exposure:i.exposure,type:p}}setDataType(e){return this.type=e,this}load(e,r,t,o){return super.load(e,(function(e,t){switch(e.type){case n.VzW:case n.cLu:e.colorSpace=n.GUF,e.minFilter=n.wem,e.magFilter=n.wem,e.generateMipmaps=!1,e.flipY=!0}r&&r(e,t)}),t,o)}}},7142:(e,r,t)=>{t.d(r,{n:()=>I});var n=t(7327),o=function(e){return URL.createObjectURL(new Blob([e],{type:"text/javascript"}))};try{URL.revokeObjectURL(o(""))}catch(e){o=function(e){return"data:application/javascript;charset=UTF-8,"+encodeURI(e)}}var a=Uint8Array,s=Uint16Array,i=Uint32Array,c=new a([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),f=new a([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),l=new a([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),u=function(e,r){for(var t=new s(31),n=0;n<31;++n)t[n]=r+=1<<e[n-1];var o=new i(t[30]);for(n=1;n<30;++n)for(var a=t[n];a<t[n+1];++a)o[a]=a-t[n]<<5|n;return[t,o]},p=u(c,2),d=p[0],h=p[1];d[28]=258,h[258]=28;for(var m=u(f,0),w=m[0],v=(m[1],new s(32768)),g=0;g<32768;++g){var y=(43690&g)>>>1|(21845&g)<<1;y=(61680&(y=(52428&y)>>>2|(13107&y)<<2))>>>4|(3855&y)<<4,v[g]=((65280&y)>>>8|(255&y)<<8)>>>1}var S=function(e,r,t){for(var n=e.length,o=0,a=new s(r);o<n;++o)++a[e[o]-1];var i,c=new s(r);for(o=0;o<r;++o)c[o]=c[o-1]+a[o-1]<<1;if(t){i=new s(1<<r);var f=15-r;for(o=0;o<n;++o)if(e[o])for(var l=o<<4|e[o],u=r-e[o],p=c[e[o]-1]++<<u,d=p|(1<<u)-1;p<=d;++p)i[v[p]>>>f]=l}else for(i=new s(n),o=0;o<n;++o)e[o]&&(i[o]=v[c[e[o]-1]++]>>>15-e[o]);return i},b=new a(288);for(g=0;g<144;++g)b[g]=8;for(g=144;g<256;++g)b[g]=9;for(g=256;g<280;++g)b[g]=7;for(g=280;g<288;++g)b[g]=8;var x=new a(32);for(g=0;g<32;++g)x[g]=5;var E=S(b,9,1),C=S(x,5,1),M=function(e){for(var r=e[0],t=1;t<e.length;++t)e[t]>r&&(r=e[t]);return r},R=function(e,r,t){var n=r/8|0;return(e[n]|e[n+1]<<8)>>(7&r)&t},T=function(e,r){var t=r/8|0;return(e[t]|e[t+1]<<8|e[t+2]<<16)>>(7&r)},A=function(e,r,t){(null==r||r<0)&&(r=0),(null==t||t>e.length)&&(t=e.length);var n=new(e instanceof s?s:e instanceof i?i:a)(t-r);return n.set(e.subarray(r,t)),n},F=new a(0),U=function(e,r){return e[r]|e[r+1]<<8},_=function(e,r){return(e[r]|e[r+1]<<8|e[r+2]<<16|e[r+3]<<24)>>>0},O=function(e,r){return _(e,r)+4294967296*_(e,r+4)};function L(e,r){return function(e,r,t){var n=e.length;if(!n||t&&!t.l&&n<5)return r||new a(0);var o=!r||t,s=!t||t.i;t||(t={}),r||(r=new a(3*n));var i,u=function(e){var t=r.length;if(e>t){var n=new a(Math.max(2*t,e));n.set(r),r=n}},p=t.f||0,h=t.p||0,m=t.b||0,v=t.l,g=t.d,y=t.m,b=t.n,x=8*n;do{if(!v){t.f=p=R(e,h,1);var F=R(e,h+1,3);if(h+=3,!F){var U=e[(i=h,(B=(i/8|0)+(7&i&&1)+4)-4)]|e[B-3]<<8,_=B+U;if(_>n){if(s)throw"unexpected EOF";break}o&&u(m+U),r.set(e.subarray(B,_),m),t.b=m+=U,t.p=h=8*_;continue}if(1==F)v=E,g=C,y=9,b=5;else{if(2!=F)throw"invalid block type";var O=R(e,h,31)+257,L=R(e,h+10,15)+4,W=O+R(e,h+5,31)+1;h+=14;for(var k=new a(W),H=new a(19),N=0;N<L;++N)H[l[N]]=R(e,h+3*N,7);h+=3*L;var J=M(H),j=(1<<J)-1,I=S(H,J,1);for(N=0;N<W;){var B,$=I[R(e,h,j)];if(h+=15&$,(B=$>>>4)<16)k[N++]=B;else{var G=0,z=0;for(16==B?(z=3+R(e,h,3),h+=2,G=k[N-1]):17==B?(z=3+R(e,h,7),h+=3):18==B&&(z=11+R(e,h,127),h+=7);z--;)k[N++]=G}}var D=k.subarray(0,O),V=k.subarray(O);y=M(D),b=M(V),v=S(D,y,1),g=S(V,b,1)}if(h>x){if(s)throw"unexpected EOF";break}}o&&u(m+131072);for(var X=(1<<y)-1,Z=(1<<b)-1,K=h;;K=h){var P=(G=v[T(e,h)&X])>>>4;if((h+=15&G)>x){if(s)throw"unexpected EOF";break}if(!G)throw"invalid length/literal";if(P<256)r[m++]=P;else{if(256==P){K=h,v=null;break}var q=P-254;if(P>264){var Y=c[N=P-257];q=R(e,h,(1<<Y)-1)+d[N],h+=Y}var Q=g[T(e,h)&Z],ee=Q>>>4;if(!Q)throw"invalid distance";if(h+=15&Q,V=w[ee],ee>3&&(Y=f[ee],V+=T(e,h)&(1<<Y)-1,h+=Y),h>x){if(s)throw"unexpected EOF";break}o&&u(m+131072);for(var re=m+q;m<re;m+=4)r[m]=r[m-V],r[m+1]=r[m+1-V],r[m+2]=r[m+2-V],r[m+3]=r[m+3-V];m=re}}t.l=v,t.p=K,t.b=m,v&&(p=1,t.m=y,t.d=g,t.n=b)}while(!p);return m==r.length?r:A(r,0,m)}(e,r)}var W="undefined"!=typeof TextDecoder&&new TextDecoder;try{W.decode(F,{stream:!0})}catch(e){}function k(e,r){if(r){for(var t="",n=0;n<e.length;n+=16384)t+=String.fromCharCode.apply(null,e.subarray(n,n+16384));return t}if(W)return W.decode(e);var o=function(e){for(var r="",t=0;;){var n=e[t++],o=(n>127)+(n>223)+(n>239);if(t+o>e.length)return[r,A(e,t-1)];o?3==o?(n=((15&n)<<18|(63&e[t++])<<12|(63&e[t++])<<6|63&e[t++])-65536,r+=String.fromCharCode(55296|n>>10,56320|1023&n)):r+=1&o?String.fromCharCode((31&n)<<6|63&e[t++]):String.fromCharCode((15&n)<<12|(63&e[t++])<<6|63&e[t++]):r+=String.fromCharCode(n)}}(e),a=o[0];if(o[1].length)throw"invalid utf-8 data";return a}var H=function(e,r){return r+30+U(e,r+26)+U(e,r+28)},N=function(e,r,t){var n=U(e,r+28),o=k(e.subarray(r+46,r+46+n),!(2048&U(e,r+8))),a=r+46+n,s=_(e,r+20),i=t&&4294967295==s?J(e,a):[s,_(e,r+24),_(e,r+42)],c=i[0],f=i[1],l=i[2];return[U(e,r+10),c,f,o,a+U(e,r+30)+U(e,r+32),l]},J=function(e,r){for(;1!=U(e,r);r+=4+U(e,r+2));return[O(e,r+12),O(e,r+4),O(e,r+20)]};class j{parse(e){const r={},t=e.split("\n"),n=t.length;let o=0,a=null,s=r;const i=[r];return function e(){const r=t[o];if(r.includes("=")){const e=r.split("="),t=e[0].trim(),n=e[1].trim();if(n.endsWith("{")){const e={};i.push(e),s[t]=e,s=e}else s[t]=n}else if(r.endsWith("{")){const e=s[a]||{};i.push(e),s[a]=e,s=e}else if(r.endsWith("}")){if(i.pop(),0===i.length)return;s=i[i.length-1]}else if(r.endsWith("(")){const e={};i.push(e),a=r.split("(")[0].trim()||a,s[a]=e,s=e}else r.endsWith(")")?(i.pop(),s=i[i.length-1]):a=r.trim();o++,o<n&&e()}(),r}}class I extends n.aNw{constructor(e){super(e)}load(e,r,t,o){const a=this,s=new n.hH6(a.manager);s.setPath(a.path),s.setResponseType("arraybuffer"),s.setRequestHeader(a.requestHeader),s.setWithCredentials(a.withCredentials),s.load(e,(function(t){try{r(a.parse(t))}catch(r){o?o(r):console.error(r),a.manager.itemError(e)}}),t,o)}parse(e){const r=new j;function t(e){const r=e.slice(0,7),t=new Uint8Array([80,88,82,45,85,83,68,67]);return r.every(((e,r)=>e===t[r]))}const o=function(e){for(var r={},t=e.length-22;101010256!=_(e,t);--t)if(!t||e.length-t>65558)throw"invalid zip file";var n=U(e,t+8);if(!n)return{};var o=_(e,t+16),s=4294967295==o;if(s){if(t=_(e,t-12),101075792!=_(e,t))throw"invalid zip file";n=_(e,t+32),o=_(e,t+48)}for(var i=0;i<n;++i){var c=N(e,o,s),f=c[0],l=c[1],u=c[2],p=c[3],d=c[4],h=c[5],m=H(e,h);if(o=d,f){if(8!=f)throw"unknown compression type "+f;r[p]=L(e.subarray(m,m+l),new a(u))}else r[p]=A(e,m,m+l)}return r}(new Uint8Array(e)),s=function(e){const o={};(new n.hH6).setResponseType("arraybuffer");for(const n in e){if(n.endsWith("png")){const r=new Blob([e[n]],{type:{type:"image/png"}});o[n]=URL.createObjectURL(r)}if(n.endsWith("usd")||n.endsWith("usda")){if(t(e[n])){console.warn("THREE.USDZLoader: Crate files (.usdc or binary .usd) are not supported.");continue}const a=k(e[n]);o[n]=r.parse(a)}}return o}(o),i=function(e){if(e.length<1)return;const r=Object.keys(e)[0];let n=!1;if(r.endsWith("usda"))return e[r];if(r.endsWith("usdc"))n=!0;else if(r.endsWith("usd")){if(!t(e[r]))return e[r];n=!0}n&&console.warn("THREE.USDZLoader: Crate files (.usdc or binary .usd) are not supported.")}(o);if(void 0===i)return console.warn("THREE.USDZLoader: No usda file found."),new n.ZAu;const c=k(i),f=r.parse(c);function l(e,r){if(e){if(void 0!==r){const t=`def Mesh "${r}"`;if(t in e)return e[t]}for(const r in e){const t=e[r];if(r.startsWith("def Mesh"))return"point3f[] points"in e&&(t["point3f[] points"]=e["point3f[] points"]),"texCoord2f[] primvars:st"in e&&(t["texCoord2f[] primvars:st"]=e["texCoord2f[] primvars:st"]),"int[] primvars:st:indices"in e&&(t["int[] primvars:st:indices"]=e["int[] primvars:st:indices"]),t;if("object"==typeof t){const e=l(t);if(e)return e}}}}function u(e,r=""){for(const t in e){const n=e[t];if(t.startsWith("def Material"+r))return n;if("object"==typeof n){const e=u(n,r);if(e)return e}}}function p(e,r){r["float inputs:rotation"]&&(e.rotation=parseFloat(r["float inputs:rotation"])),r["float2 inputs:scale"]&&(e.repeat=(new n.FM8).fromArray(JSON.parse("["+r["float2 inputs:scale"].replace(/[()]*/g,"")+"]"))),r["float2 inputs:translation"]&&(e.offset=(new n.FM8).fromArray(JSON.parse("["+r["float2 inputs:translation"].replace(/[()]*/g,"")+"]")))}function d(e,r){for(const t in e){const n=e[t];if(t.startsWith(`def Shader "${r}"`))return n;if("object"==typeof n){const e=d(n,r);if(e)return e}}}function h(e){if("asset inputs:file"in e){const r=e["asset inputs:file"].replace(/@*/g,""),t=(new n.dpR).load(s[r]),o={'"clamp"':n.uWy,'"mirror"':n.OoA,'"repeat"':n.rpg};return"token inputs:wrapS"in e&&(t.wrapS=o[e["token inputs:wrapS"]]),"token inputs:wrapT"in e&&(t.wrapT=o[e["token inputs:wrapT"]]),t}return null}function m(e){const r=function(e){if(!e)return;let r=new n.u9r;if("int[] faceVertexIndices"in e){const t=JSON.parse(e["int[] faceVertexIndices"]);r.setIndex(t)}if("point3f[] points"in e){const t=JSON.parse(e["point3f[] points"].replace(/[()]*/g,"")),o=new n.TlE(new Float32Array(t),3);r.setAttribute("position",o)}if("normal3f[] normals"in e){const t=JSON.parse(e["normal3f[] normals"].replace(/[()]*/g,"")),o=new n.TlE(new Float32Array(t),3);r.setAttribute("normal",o)}else r.computeVertexNormals();if("float2[] primvars:st"in e&&(e["texCoord2f[] primvars:st"]=e["float2[] primvars:st"]),"texCoord2f[] primvars:st"in e){const t=JSON.parse(e["texCoord2f[] primvars:st"].replace(/[()]*/g,"")),o=new n.TlE(new Float32Array(t),2);if("int[] primvars:st:indices"in e){r=r.toNonIndexed();const t=JSON.parse(e["int[] primvars:st:indices"]);r.setAttribute("uv",function(e,r){const t=e.array,o=e.itemSize,a=new t.constructor(r.length*o);let s=0,i=0;for(let e=0,n=r.length;e<n;e++){s=r[e]*o;for(let e=0;e<o;e++)a[i++]=t[s++]}return new n.TlE(a,o)}(o,t))}else r.setAttribute("uv",o)}return r}(function(e){if(e){if("prepend references"in e){const r=e["prepend references"].split("@"),t=r[1].replace(/^.\//,""),n=r[2].replace(/^<\//,"").replace(/>$/,"");return l(s[t],n)}return l(e)}}(e)),t=function(e){const r=new n.EJi;if(void 0!==e){if('def Shader "PreviewSurface"'in e){const t=e['def Shader "PreviewSurface"'];if("color3f inputs:diffuseColor.connect"in t){const o=t["color3f inputs:diffuseColor.connect"],a=d(f,/(\w+).output/.exec(o)[1]);r.map=h(a),r.map.colorSpace=n.KI_,'def Shader "Transform2d_diffuse"'in e&&p(r.map,e['def Shader "Transform2d_diffuse"'])}else if("color3f inputs:diffuseColor"in t){const e=t["color3f inputs:diffuseColor"].replace(/[()]*/g,"");r.color.fromArray(JSON.parse("["+e+"]"))}if("color3f inputs:emissiveColor.connect"in t){const o=t["color3f inputs:emissiveColor.connect"],a=d(f,/(\w+).output/.exec(o)[1]);r.emissiveMap=h(a),r.emissiveMap.colorSpace=n.KI_,r.emissive.set(16777215),'def Shader "Transform2d_emissive"'in e&&p(r.emissiveMap,e['def Shader "Transform2d_emissive"'])}else if("color3f inputs:emissiveColor"in t){const e=t["color3f inputs:emissiveColor"].replace(/[()]*/g,"");r.emissive.fromArray(JSON.parse("["+e+"]"))}if("normal3f inputs:normal.connect"in t){const o=t["normal3f inputs:normal.connect"],a=d(f,/(\w+).output/.exec(o)[1]);r.normalMap=h(a),r.normalMap.colorSpace=n.aCh,'def Shader "Transform2d_normal"'in e&&p(r.normalMap,e['def Shader "Transform2d_normal"'])}if("float inputs:roughness.connect"in t){const o=t["float inputs:roughness.connect"],a=d(f,/(\w+).output/.exec(o)[1]);r.roughness=1,r.roughnessMap=h(a),r.roughnessMap.colorSpace=n.aCh,'def Shader "Transform2d_roughness"'in e&&p(r.roughnessMap,e['def Shader "Transform2d_roughness"'])}else"float inputs:roughness"in t&&(r.roughness=parseFloat(t["float inputs:roughness"]));if("float inputs:metallic.connect"in t){const o=t["float inputs:metallic.connect"],a=d(f,/(\w+).output/.exec(o)[1]);r.metalness=1,r.metalnessMap=h(a),r.metalnessMap.colorSpace=n.aCh,'def Shader "Transform2d_metallic"'in e&&p(r.metalnessMap,e['def Shader "Transform2d_metallic"'])}else"float inputs:metallic"in t&&(r.metalness=parseFloat(t["float inputs:metallic"]));if("float inputs:clearcoat.connect"in t){const o=t["float inputs:clearcoat.connect"],a=d(f,/(\w+).output/.exec(o)[1]);r.clearcoat=1,r.clearcoatMap=h(a),r.clearcoatMap.colorSpace=n.aCh,'def Shader "Transform2d_clearcoat"'in e&&p(r.clearcoatMap,e['def Shader "Transform2d_clearcoat"'])}else"float inputs:clearcoat"in t&&(r.clearcoat=parseFloat(t["float inputs:clearcoat"]));if("float inputs:clearcoatRoughness.connect"in t){const o=t["float inputs:clearcoatRoughness.connect"],a=d(f,/(\w+).output/.exec(o)[1]);r.clearcoatRoughness=1,r.clearcoatRoughnessMap=h(a),r.clearcoatRoughnessMap.colorSpace=n.aCh,'def Shader "Transform2d_clearcoatRoughness"'in e&&p(r.clearcoatRoughnessMap,e['def Shader "Transform2d_clearcoatRoughness"'])}else"float inputs:clearcoatRoughness"in t&&(r.clearcoatRoughness=parseFloat(t["float inputs:clearcoatRoughness"]));if("float inputs:ior"in t&&(r.ior=parseFloat(t["float inputs:ior"])),"float inputs:occlusion.connect"in t){const o=t["float inputs:occlusion.connect"],a=d(f,/(\w+).output/.exec(o)[1]);r.aoMap=h(a),r.aoMap.colorSpace=n.aCh,'def Shader "Transform2d_occlusion"'in e&&p(r.aoMap,e['def Shader "Transform2d_occlusion"'])}}if('def Shader "diffuseColor_texture"'in e){const t=e['def Shader "diffuseColor_texture"'];r.map=h(t),r.map.colorSpace=n.KI_}if('def Shader "normal_texture"'in e){const t=e['def Shader "normal_texture"'];r.normalMap=h(t),r.normalMap.colorSpace=n.aCh}}return r}(function(e){if(e){if("rel material:binding"in e){const r=e["rel material:binding"].replace(/^<\//,"").replace(/>$/,"").split("/");return u(f,` "${r[1]}"`)}return u(e)}}(e)),o=r?new n.Kj0(r,t):new n.Tme;if("matrix4d xformOp:transform"in e){const r=JSON.parse("["+e["matrix4d xformOp:transform"].replace(/[()]*/g,"")+"]");o.matrix.fromArray(r),o.matrix.decompose(o.position,o.quaternion,o.scale)}return o}const w=new n.ZAu;return function e(r,t){for(const n in r)if(n.startsWith("def Scope"))e(r[n],t);else if(n.startsWith("def Xform")){const o=m(r[n]);/def Xform "(\w+)"/.test(n)&&(o.name=/def Xform "(\w+)"/.exec(n)[1]),t.add(o),e(r[n],o)}}(f,w),w}}}}]);